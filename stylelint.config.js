module.exports = {
 extends: [
  'stylelint-config-recess-order',
  'stylelint-config-css-modules',
  'C:/Users/lumia/Documents/Projects/react-enterprise/own/node_modules/stylelint-config-prettier',
 ],

 ignoreFile: ['./covergae/**/*.css', './dist/**/*.css'],
 rules: {
  'prettier/prettier': true,
  'order/properties-order': [
   {
    // Must be first.
    properties: ['all'],
   },
   {
    // Position.
    properties: [
     'position',
     'inset',
     'inset-block',
     'inset-inline',
     'top',
     'right',
     'bottom',
     'left',
     'z-index',
    ],
   },
   {
    // Display mode.
    properties: ['box-sizing', 'display'],
   },
   {
    // Flexible boxes.
    properties: [
     'flex',
     'flex-basis',
     'flex-direction',
     'flex-flow',
     'flex-grow',
     'flex-shrink',
     'flex-wrap',
    ],
   },
   {
    // Grid layout.
    properties: [
     'grid',
     'grid-area',
     'grid-template',
     'grid-template-areas',
     'grid-template-rows',
     'grid-template-columns',
     'grid-row',
     'grid-row-start',
     'grid-row-end',
     'grid-column',
     'grid-column-start',
     'grid-column-end',
     'grid-auto-rows',
     'grid-auto-columns',
     'grid-auto-flow',
     'grid-gap',
     'grid-row-gap',
     'grid-column-gap',
    ],
   },
   {
    // Gap.
    properties: ['gap', 'row-gap', 'column-gap'],
   },
   {
    // Layout alignment.
    properties: [
     'place-content',
     'place-items',
     'place-self',
     'align-content',
     'align-items',
     'align-self',
     'justify-content',
     'justify-items',
     'justify-self',
    ],
   },
   {
    // Order.
    properties: ['order'],
   },
   {
    // Box model.
    properties: [
     'float',
     'width',
     'min-width',
     'max-width',
     'height',
     'min-height',
     'max-height',
     'aspect-ratio',
     'padding',
     'padding-block',
     'padding-block-start',
     'padding-block-end',
     'padding-inline',
     'padding-inline-start',
     'padding-inline-end',
     'padding-top',
     'padding-right',
     'padding-bottom',
     'padding-left',
     'margin',
     'margin-block',
     'margin-block-start',
     'margin-block-end',
     'margin-inline',
     'margin-inline-start',
     'margin-inline-end',
     'margin-top',
     'margin-right',
     'margin-bottom',
     'margin-left',
     'overflow',
     'overflow-x',
     'overflow-y',
     '-webkit-overflow-scrolling',
     '-ms-overflow-x',
     '-ms-overflow-y',
     '-ms-overflow-style',
     'overscroll-behavior',
     'overscroll-behavior-x',
     'overscroll-behavior-y',
     'overscroll-behavior-inline',
     'overscroll-behavior-block',
     'clip',
     'clip-path',
     'clear',
    ],
   },
   {
    // Typography.
    properties: [
     'font',
     'font-family',
     'font-size',
     'font-variation-settings',
     'font-style',
     'font-weight',
     'font-feature-settings',
     'font-optical-sizing',
     'font-kerning',
     'font-variant',
     'font-variant-ligatures',
     'font-variant-caps',
     'font-variant-alternates',
     'font-variant-numeric',
     'font-variant-east-asian',
     'font-variant-position',
     'font-size-adjust',
     'font-stretch',
     'font-effect',
     'font-emphasize',
     'font-emphasize-position',
     'font-emphasize-style',
     '-webkit-font-smoothing',
     '-moz-osx-font-smoothing',
     'font-smooth',
     'hyphens',
     'line-height',
     'color',
     'text-align',
     'text-align-last',
     'text-emphasis',
     'text-emphasis-color',
     'text-emphasis-style',
     'text-emphasis-position',
     'text-decoration',
     'text-decoration-line',
     'text-decoration-thickness',
     'text-decoration-style',
     'text-decoration-color',
     'text-underline-position',
     'text-underline-offset',
     'text-indent',
     'text-justify',
     'text-outline',
     '-ms-text-overflow',
     'text-overflow',
     'text-overflow-ellipsis',
     'text-overflow-mode',
     'text-shadow',
     'text-transform',
     'text-wrap',
     '-webkit-text-size-adjust',
     '-ms-text-size-adjust',
     'letter-spacing',
     'word-break',
     'word-spacing',
     'word-wrap', // Legacy name for `overflow-wrap`
     'overflow-wrap',
     'tab-size',
     'white-space',
     'vertical-align',

     'list-style',
     'list-style-position',
     'list-style-type',
     'list-style-image',

     'src',
     'font-display',
     'unicode-range',
     'size-adjust',
     'ascent-override',
     'descent-override',
     'line-gap-override',
    ],
   },
   {
    // Accessibility & Interactions.
    properties: [
     'pointer-events',
     '-ms-touch-action',
     'touch-action',
     'cursor',
     'visibility',
     'zoom',
     'table-layout',
     'empty-cells',
     'caption-side',
     'border-spacing',
     'border-collapse',
     'content',
     'quotes',
     'counter-reset',
     'counter-increment',
     'resize',
     'user-select',
     'nav-index',
     'nav-up',
     'nav-right',
     'nav-down',
     'nav-left',
    ],
   },
   {
    // Background & Borders.
    properties: [
     'background',
     'background-color',
     'background-image',
     "-ms-filter:\\'progid:DXImageTransform.Microsoft.gradient",
     'filter:progid:DXImageTransform.Microsoft.gradient',
     'filter:progid:DXImageTransform.Microsoft.AlphaImageLoader',
     'filter',
     'background-repeat',
     'background-attachment',
     'background-position',
     'background-position-x',
     'background-position-y',
     'background-clip',
     'background-origin',
     'background-size',
     'background-blend-mode',
     'isolation',
     'border',
     'border-color',
     'border-style',
     'border-width',
     'border-block',
     'border-block-start',
     'border-block-start-color',
     'border-block-start-style',
     'border-block-start-width',
     'border-block-end',
     'border-block-end-color',
     'border-block-end-style',
     'border-block-end-width',
     'border-inline',
     'border-inline-start',
     'border-inline-start-color',
     'border-inline-start-style',
     'border-inline-start-width',
     'border-inline-end',
     'border-inline-end-color',
     'border-inline-end-style',
     'border-inline-end-width',
     'border-top',
     'border-top-color',
     'border-top-style',
     'border-top-width',
     'border-right',
     'border-right-color',
     'border-right-style',
     'border-right-width',
     'border-bottom',
     'border-bottom-color',
     'border-bottom-style',
     'border-bottom-width',
     'border-left',
     'border-left-color',
     'border-left-style',
     'border-left-width',
     'border-radius',
     'border-start-start-radius',
     'border-start-end-radius',
     'border-end-start-radius',
     'border-end-end-radius',
     'border-top-left-radius',
     'border-top-right-radius',
     'border-bottom-right-radius',
     'border-bottom-left-radius',
     'border-image',
     'border-image-source',
     'border-image-slice',
     'border-image-width',
     'border-image-outset',
     'border-image-repeat',
     'outline',
     'outline-width',
     'outline-style',
     'outline-color',
     'outline-offset',
     'box-shadow',
     'mix-blend-mode',
     'filter:progid:DXImageTransform.Microsoft.Alpha(Opacity',
     "-ms-filter:\\'progid:DXImageTransform.Microsoft.Alpha",
     'opacity',
     '-ms-interpolation-mode',
    ],
   },
   {
    // SVG Presentation Attributes.
    properties: [
     'alignment-baseline',
     'baseline-shift',
     'dominant-baseline',
     'text-anchor',
     'word-spacing',
     'writing-mode',

     'fill',
     'fill-opacity',
     'fill-rule',
     'stroke',
     'stroke-dasharray',
     'stroke-dashoffset',
     'stroke-linecap',
     'stroke-linejoin',
     'stroke-miterlimit',
     'stroke-opacity',
     'stroke-width',

     'color-interpolation',
     'color-interpolation-filters',
     'color-profile',
     'color-rendering',
     'flood-color',
     'flood-opacity',
     'image-rendering',
     'lighting-color',
     'marker-start',
     'marker-mid',
     'marker-end',
     'mask',
     'shape-rendering',
     'stop-color',
     'stop-opacity',
    ],
   },
   {
    // Transitions & Animation.
    properties: [
     'transition',
     'transition-delay',
     'transition-timing-function',
     'transition-duration',
     'transition-property',
     'transform',
     'transform-origin',
     'animation',
     'animation-name',
     'animation-duration',
     'animation-play-state',
     'animation-timing-function',
     'animation-delay',
     'animation-iteration-count',
     'animation-direction',
    ],
   },
  ],

  'alpha-value-notation': [
   'percentage',
   {
    exceptProperties: [
     'opacity',
     'fill-opacity',
     'flood-opacity',
     'stop-opacity',
     'stroke-opacity',
    ],
   },
  ],
  'at-rule-empty-line-before': [
   'always',
   {
    except: ['blockless-after-same-name-blockless', 'first-nested'],
    ignore: ['after-comment'],
   },
  ],
  'at-rule-name-case': 'lower',
  'at-rule-name-space-after': 'always-single-line',
  'at-rule-no-vendor-prefix': true,
  'at-rule-semicolon-newline-after': 'always',
  'block-closing-brace-empty-line-before': 'never',
  'block-closing-brace-newline-after': 'always',
  'block-closing-brace-newline-before': 'always-multi-line',
  'block-closing-brace-space-before': 'always-single-line',
  'block-opening-brace-newline-after': 'always-multi-line',
  'block-opening-brace-space-after': 'always-single-line',
  'block-opening-brace-space-before': 'always',
  'color-function-notation': 'modern',
  'color-hex-case': 'lower',
  'color-hex-length': 'short',
  'comment-empty-line-before': [
   'always',
   {
    except: ['first-nested'],
    ignore: ['stylelint-commands'],
   },
  ],
  'comment-whitespace-inside': 'always',
  'custom-property-empty-line-before': [
   'always',
   {
    except: ['after-custom-property', 'first-nested'],
    ignore: ['after-comment', 'inside-single-line-block'],
   },
  ],
  'custom-media-pattern': [
   '^([a-z][a-z0-9]*)(-[a-z0-9]+)*$',
   {
    message: (name) =>
     `Expected custom media query name "${name}" to be kebab-case`,
   },
  ],
  'custom-property-pattern': [
   '^([a-z][a-z0-9]*)(-[a-z0-9]+)*$',
   {
    message: (name) =>
     `Expected custom property name "${name}" to be kebab-case`,
   },
  ],
  'declaration-bang-space-after': 'never',
  'declaration-bang-space-before': 'always',
  'declaration-block-semicolon-newline-after': 'always-multi-line',
  'declaration-block-semicolon-space-after': 'always-single-line',
  'declaration-block-semicolon-space-before': 'never',
  'declaration-block-single-line-max-declarations': 1,
  'declaration-block-trailing-semicolon': 'always',
  'declaration-block-no-redundant-longhand-properties': true,
  'declaration-colon-newline-after': 'always-multi-line',
  'declaration-colon-space-after': 'always-single-line',
  'declaration-colon-space-before': 'never',
  'declaration-empty-line-before': [
   'always',
   {
    except: ['after-declaration', 'first-nested'],
    ignore: ['after-comment', 'inside-single-line-block'],
   },
  ],
  'font-family-name-quotes': 'always-where-recommended',
  'function-comma-newline-after': 'always-multi-line',
  'function-comma-space-after': 'always-single-line',
  'function-comma-space-before': 'never',
  'function-max-empty-lines': 0,
  'function-name-case': 'lower',
  'function-parentheses-newline-inside': 'always-multi-line',
  'function-parentheses-space-inside': 'never-single-line',
  'function-url-quotes': 'always',
  'function-whitespace-after': 'always',
  'hue-degree-notation': 'angle',
  'import-notation': 'url',
  indentation: 2,
  'keyframe-selector-notation': 'percentage-unless-within-keyword-only-block',
  'keyframes-name-pattern': [
   '^([a-z][a-z0-9]*)(-[a-z0-9]+)*$',
   {
    message: (name) => `Expected keyframe name "${name}" to be kebab-case`,
   },
  ],
  'length-zero-no-unit': true,
  'max-empty-lines': 1,
  'max-line-length': 120,
  'media-feature-colon-space-after': 'always',
  'media-feature-colon-space-before': 'never',
  'media-feature-name-case': 'lower',
  'media-feature-name-no-vendor-prefix': true,
  'media-feature-parentheses-space-inside': 'never',
  'media-feature-range-operator-space-after': 'always',
  'media-feature-range-operator-space-before': 'always',
  'media-query-list-comma-newline-after': 'always-multi-line',
  'media-query-list-comma-space-after': 'always-single-line',
  'media-query-list-comma-space-before': 'never',
  'no-empty-first-line': true,
  'no-eol-whitespace': true,
  'no-missing-end-of-source-newline': true,
  'number-leading-zero': 'always',
  'number-max-precision': 4,
  'number-no-trailing-zeros': true,
  'property-case': 'lower',
  'property-no-vendor-prefix': true,
  'rule-empty-line-before': [
   'always-multi-line',
   {
    except: ['first-nested'],
    ignore: ['after-comment'],
   },
  ],
  'selector-attribute-brackets-space-inside': 'never',
  'selector-attribute-operator-space-after': 'never',
  'selector-attribute-operator-space-before': 'never',
  'selector-attribute-quotes': 'always',
  'selector-class-pattern': [
   '^([a-z][a-z0-9]*)(-[a-z0-9]+)*$',
   {
    message: (selector) =>
     `Expected class selector "${selector}" to be kebab-case`,
   },
  ],
  'selector-combinator-space-after': 'always',
  'selector-combinator-space-before': 'always',
  'selector-descendant-combinator-no-non-space': true,
  'selector-id-pattern': [
   '^([a-z][a-z0-9]*)(-[a-z0-9]+)*$',
   {
    message: (selector) =>
     `Expected id selector "${selector}" to be kebab-case`,
   },
  ],
  'selector-list-comma-newline-after': 'always',
  'selector-list-comma-space-before': 'never',
  'selector-max-empty-lines': 0,
  'selector-no-vendor-prefix': true,
  'selector-not-notation': 'complex',
  'selector-pseudo-class-case': 'lower',
  'selector-pseudo-class-parentheses-space-inside': 'never',
  'selector-pseudo-element-case': 'lower',
  'selector-pseudo-element-colon-notation': 'double',
  'selector-type-case': 'lower',
  'shorthand-property-no-redundant-values': true,
  'string-quotes': 'double',
  'unit-case': 'lower',
  'value-keyword-case': 'lower',
  'value-list-comma-newline-after': 'always-multi-line',
  'value-list-comma-space-after': 'always-single-line',
  'value-list-comma-space-before': 'never',
  'value-list-max-empty-lines': 0,
  'value-no-vendor-prefix': [
   true,
   {
    // `-webkit-box` is allowed as standard. See https://www.w3.org/TR/css-overflow-3/#webkit-line-clamp
    ignoreValues: ['box'],
   },
  ],

  'annotation-no-unknown': true,
  'block-no-empty': true,
  'color-no-invalid-hex': true,
  'comment-no-empty': true,
  'custom-property-no-missing-var-function': true,
  'declaration-block-no-duplicate-custom-properties': true,
  'declaration-block-no-duplicate-properties': [
   true,
   {
    ignore: ['consecutive-duplicates-with-different-values'],
   },
  ],
  'declaration-block-no-shorthand-property-overrides': true,
  'font-family-no-duplicate-names': true,
  'font-family-no-missing-generic-family-keyword': true,
  'function-calc-no-unspaced-operator': true,
  'function-linear-gradient-no-nonstandard-direction': true,
  'function-no-unknown': true,
  'keyframe-block-no-duplicate-selectors': true,
  'keyframe-declaration-no-important': true,
  'media-feature-name-no-unknown': true,
  'named-grid-areas-no-invalid': true,
  'no-descending-specificity': true,
  'no-duplicate-at-import-rules': true,
  'no-duplicate-selectors': true,
  'no-empty-source': true,
  'no-extra-semicolons': true,
  'no-invalid-double-slash-comments': true,
  'no-invalid-position-at-import-rule': true,
  'no-irregular-whitespace': true,
  'property-no-unknown': true,
  'selector-pseudo-class-no-unknown': true,
  'selector-pseudo-element-no-unknown': true,
  'selector-type-no-unknown': [
   true,
   {
    ignore: ['custom-elements'],
   },
  ],
  'string-no-newline': true,
  'unit-no-unknown': true,
  'at-rule-no-unknown': [
   true,
   { ignoreAtRules: ['apply', 'variants', 'responsive', 'screen'] },
  ],
  'declaration-block-no-duplicate-custom-properties': null,
  'named-grid-areas-no-invalid': null,
  'no-duplicate-selectors': null,
  'no-empty-source': null,
  'selector-pseudo-element-no-unknown': null,
  'declaration-block-trailing-semicolon': null,
  'no-descending-specificity': null,
  'string-no-newline': null,
  // Use camelCase for classes and ids only. Works better with CSS modules
  // 'selector-class-pattern': /^[a-z][a-zA-Z]*(-(enter|leave)(-(active|to))?)?$/,
  // 'selector-id-pattern': /^[a-z][a-zA-Z]*$/,
  //
  // Limit the number of universal selectors in a selector,
  // to avoid very slow selectors
  'selector-max-universal': 1,
 },
}
